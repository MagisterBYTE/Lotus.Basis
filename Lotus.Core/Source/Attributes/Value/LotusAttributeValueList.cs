//=====================================================================================================================
// Проект: Модуль базового ядра
// Раздел: Подсистема атрибутов
// Подраздел: Атрибуты связанные с возможностью непосредственно управлять значением поля/свойства объекта
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusAttributeValueList.cs
*		Атрибут для определения набора значений величины.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
//=====================================================================================================================
namespace Lotus
{
	namespace Core
	{
        //-------------------------------------------------------------------------------------------------------------
        /** \addtogroup CoreAttribute
		*@{*/
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Атрибут для определения набора значений величины
        /// </summary>
        /// <remarks>
        /// В зависимости от способа задания, значение распространяется либо на весь тип, либо к каждому экземпляру
        /// </remarks>
        //-------------------------------------------------------------------------------------------------------------
        [AttributeUsage(AttributeTargets.Property | AttributeTargets.Field, Inherited = false, AllowMultiple = false)]
#if UNITY_2017_1_OR_NEWER
		public sealed class LotusListValuesAttribute : UnityEngine.PropertyAttribute
#else
		public sealed class LotusListValuesAttribute : Attribute
#endif
		{
			#region ======================================= ДАННЫЕ ====================================================
			internal readonly System.Object _listValues;
			internal readonly String _memberName;
			internal readonly TInspectorMemberType _memberType;
			internal String _formatMethodName = "";
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Набор значений величины
			/// </summary>
			public System.Object ListValues
			{
				get { return _listValues; }
			}

			/// <summary>
			/// Имя члена объекта содержащий набор значений величины
			/// </summary>
			public String MemberName
			{
				get { return _memberName; }
			}

			/// <summary>
			/// Тип члена объекта
			/// </summary>
			public TInspectorMemberType MemberType
			{
				get { return _memberType; }
			}

			/// <summary>
			/// Имя метода который осуществляет преобразование объекта в текстовое представление
			/// </summary>
			/// <remarks>
			/// Метод должен иметь один аргумент типа <see cref="System.Object"/> и возвращать значение строкового типа
			/// </remarks>
			public String FormatMethodName
			{
				get { return _formatMethodName; }
				set { _formatMethodName = value; }
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="listValues">Набор значений величины</param>
			//---------------------------------------------------------------------------------------------------------
			public LotusListValuesAttribute(params System.Object[] listValues)
			{
				_listValues = listValues;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="memberName">Имя члена объекта содержащий набор значений величины</param>
			/// <param name="memberType">Тип члена объекта</param>
			//---------------------------------------------------------------------------------------------------------
			public LotusListValuesAttribute(String memberName, TInspectorMemberType memberType)
			{
				_memberName = memberName;
				_memberType = memberType;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="type">Тип содержащий набор значений величины</param>
			/// <param name="memberName">Имя члена объекта содержащий набор значений величины</param>
			/// <param name="memberType">Тип члена объекта</param>
			//---------------------------------------------------------------------------------------------------------
			public LotusListValuesAttribute(Type type, String memberName, TInspectorMemberType memberType)
			{
				_listValues = type;
				_memberName = memberName;
				_memberType = memberType;
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================