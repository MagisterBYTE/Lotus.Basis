namespace Lotus.Core
{
    /**
     * \defgroup CoreDataBinding Подсистема связывания данных
     * \ingroup Core
     * \brief Подсистема связывания данных определяет тип и характер связанности между источником данных и приемником данных. 
     * \details Связывания данных - концепция, основанная на взаимной связи между источником данных(объектом логики или модели) и
        приемником данных, который, как правило отображает ее свойства и позволяет ими управлять - объекта представления.
    
        В зависимости от режима связывания обновление свойств источника приводит к немедленному обновлению свойств
        объекта представления.

        Определение объекта представления (он же целевой объект) и объекта модели (он же объект источник) зависят только 
        от контекста использования и режима связывания. Это разделение условно, предназначено в первую очередь для 
        того чтобы просто идентифицировать данные в определении класса.
    
        Здесь и далее используете понятие «объект логики» и «объект представления» если говорится о чистых сущностях. 
        Т.е. объект логики представляет собой чистые данные (например ответ от базы данных), а объект представления только
        отображает данные. На практике, как правило, часть функциональности одного объекта может быть передана другому. 
        Исходя из этого употребляется термин **«объект модели»** или просто модель. Это объект, который содержит данные 
        логики, и может содержать, а в некоторых случаях должен содержать, функциональность связанную с его представлением.

        Для связывания данных используется стандартная технология рефлексии данных что не очень быстро и эффективно, 
        но зато универсально, и технология Delegate.CreateDelegate котороя обеспечивает более быстрое обновление свойств и методов.
     * @{
     */
    /// <summary>
    /// Режим связывания данных между объектом модели и объектом представления.
    /// </summary>
    public enum TBindingMode
    {
        /// <summary>
        /// Объект представления лишь отображает данные модели.
        /// </summary>
        /// <remarks>
        /// Изменение данных объекта модели влечет автоматическое изменение соответствующих данных объекта представления.
        /// С объектом представления может быть связано только одно свойство/метод модели.
        /// </remarks>
        ViewData,

        /// <summary>
        /// Только объект представления управляет данными модели.
        /// </summary>
        /// <remarks>
        /// Поведение объекта представления неопределенно при внешнем изменении данных объекта модели.
        /// С объектом представления может быть связано несколько свойств/методов модели.
        /// </remarks>
        DataManager,

        /// <summary>
        /// Взаимное обновление данными между моделью и объектом представления.
        /// </summary>
        /// <remarks>
        /// Поведение объект представления неопределенно при внешнем изменении данных объекта модели.
        /// С объектом представления может быть связано только одно свойство/метод модели.
        /// </remarks>
        TwoWay
    }

    /// <summary>
    /// Тип члена объекта для связывания данных.
    /// </summary>
    public enum TBindingMemberType
    {
        /// <summary>
        /// Поле.
        /// </summary>
        Field,

        /// <summary>
        /// Свойство.
        /// </summary>
        Property,

        /// <summary>
        /// Метод.
        /// </summary>
        Method
    }

    /// <summary>
    /// Режим изменения свойств объекта представления.
    /// </summary>
    /// <remarks>
    /// Запланировано для будущих реализаций.
    /// </remarks>
    public enum TBindingModeChanged
    {
        /// <summary>
        /// Свойство изменяется непосредственно - режим по умолчанию.
        /// </summary>
        Immediate,

        /// <summary>
        /// Свойство изменяется со временем.
        /// Применяется только для числовых свойств. В основном для визуального эффекта.
        /// </summary>
        Time
    }
    /**@}*/
}