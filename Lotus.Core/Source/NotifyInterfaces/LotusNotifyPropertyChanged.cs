//=====================================================================================================================
// Проект: Модуль базового ядра
// Раздел: Интерфейсы уведомления
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusNotifyPropertyChanged.cs
*		Базовый класс для реализации оповещения об изменении своих свойств.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.ComponentModel;
//=====================================================================================================================
namespace Lotus
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		/**
         * \defgroup CoreNotifyInterfaces Интерфейсы уведомления
         * \ingroup Core
         * \brief Подсистема для определение дополнительных интерфейсов по уведомлению об изменении свойств объектов 
			и данных коллекций. 
         * @{
         */
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Определение дополнительного интерфейса для нотификации об изменении данных
		/// </summary>
		/// <remarks>
		/// Указанный интерфейс является базой для реализации связывания данных. Он обеспечивает концепцию «издатель-подписчик»,
		/// в рамках того что если объект является «издателем», т.е. другим объектам нужно знать об изменение его свойства,
		/// он обязательно должен правильно и безопасно реализовать указанный интерфейс
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusNotifyPropertyChanged
		{
			/// <summary>
			/// Событие для нотификации об изменении значения свойства. Аргумент - источник события, имя свойства и его новое значение
			/// </summary>
			Action<System.Object, String, System.Object> OnPropertyChanged { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Базовый класс для реализации оповещения об изменении своих свойств
		/// </summary>
		/// <remarks>
		/// В качестве нотификации о изменение свойств используются стандартный интерфейс уведомлений <see cref="INotifyPropertyChanged"/>
		/// </remarks>
		//-------------------------------------------------------------------------------------------------------------
		public class PropertyChangedBase : INotifyPropertyChanged
		{
			#region ======================================= ДАННЫЕ INotifyPropertyChanged =============================
			/// <summary>
			/// Событие срабатывает ПОСЛЕ изменения свойства
			/// </summary>
			public event PropertyChangedEventHandler PropertyChanged;

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Вспомогательный метод для нотификации изменений свойства
			/// </summary>
			/// <param name="propertyName">Имя свойства</param>
			//---------------------------------------------------------------------------------------------------------
			public void NotifyPropertyChanged(String propertyName = "")
			{
				if (PropertyChanged != null)
				{
					PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
				}
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Вспомогательный метод для нотификации изменений свойства
			/// </summary>
			/// <param name="args">Аргументы события</param>
			//---------------------------------------------------------------------------------------------------------
			public void NotifyPropertyChanged(PropertyChangedEventArgs args)
			{
				if (PropertyChanged != null)
				{
					PropertyChanged(this, args);
				}
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================