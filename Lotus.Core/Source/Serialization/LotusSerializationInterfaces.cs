using System.IO;
using System.Xml;

namespace Lotus.Core.Serialization
{
    /** \addtogroup CoreSerialization
	*@{*/
    /// <summary>
    /// Интерфейс для сериализации данных который обеспечивает сохраннее/загрузку данных самостоятельно объектом.
    /// в формат XML.
    /// </summary>
    /// <remarks>
    /// <para>
    /// Реализация интерфейса требуется если нужно как-то специфично записать/прочитать данные и классическая
    /// модель чтения/записи свойств и полей не подходит.
    /// </para>
    /// <para>
    /// Кроме этого реализация интерфейса позволяет меньше использовать рефлексию данных что положительно
    /// сказывается на общей скорости работы.
    /// </para>
    /// </remarks>
    public interface ILotusSerializeToXml
    {
        /// <summary>
        /// Запись данных объекта в формат данных XML.
        /// </summary>
        /// <remarks>
        /// Здесь должна быть реализована запись только данных элемента.
        /// </remarks>
        /// <param name="xmlWriter">Средство записи данных в формат XML.</param>
        void WriteToXml(XmlWriter xmlWriter);

        /// <summary>
        /// Чтение данных объекта из данных в формате XML.
        /// </summary>
        /// <param name="xmlReader">Средство чтения данных формата XML.</param>
        void ReadFromXml(XmlReader xmlReader);
    }

    /// <summary>
    /// Интерфейс для сериализации данных который обеспечивает сохраннее/загрузку данных самостоятельно объектом.
    /// в бинарный формат.
    /// </summary>
    /// <remarks>
    /// <para>
    /// Реализация интерфейса требуется если нужно как-то специфично записать/прочитать данные и классическая
    /// модель чтения/записи свойств и полей не подходит.
    /// </para>
    /// <para>
    /// Кроме этого реализация интерфейса позволяет меньше использовать рефлексию данных что положительно
    /// сказывается на общей скорости работы.
    /// </para>
    /// </remarks>
    public interface ILotusSerializeToBinary
    {
        /// <summary>
        /// Запись данных объекта в бинарный поток.
        /// </summary>
        /// <remarks>
        /// Здесь должна быть реализована запись только данных элемента.
        /// </remarks>
        /// <param name="writer">Средство записи в бинарный поток.</param>
        void WriteToBinary(BinaryWriter writer);

        /// <summary>
        /// Чтение данных объекта из бинарного потока.
        /// </summary>
        /// <param name="reader">Средство чтения из бинарного потока.</param>
        void ReadFromBinary(BinaryReader reader);
    }
    /**@}*/
}