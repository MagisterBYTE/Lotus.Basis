//=====================================================================================================================
// Проект: Модуль базового ядра
// Раздел: Подсистема сериализации
// Подраздел: Подсистема сериализаторов данных
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusCoreJsonConverters.cs
*		Конвертеры Json модуля базового ядра.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.Text;
using System.IO;
using System.Linq;
//---------------------------------------------------------------------------------------------------------------------
using Newtonsoft.Json;
//=====================================================================================================================
namespace Lotus
{
    namespace Core
    {
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup CoreSerialization
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Реализация конвертера для типа <see cref="TColor"/>
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CColorConverter : JsonConverter<TColor>
		{
			#region ======================================= КОНСТАНТНЫЕ ДАННЫЕ ========================================
			/// <summary>
			/// Глобальный экземпляр конвертера
			/// </summary>
			public static readonly CColorConverter Instance = new CColorConverter();
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			/// <summary>
			/// Возможность прочитать свойство
			/// </summary>
			public override Boolean CanRead
			{
				get
				{
					return true;
				}
			}

			/// <summary>
			/// Возможность записать свойство
			/// </summary>
			public override Boolean CanWrite
			{
				get
				{
					return true;
				}
			}
			#endregion

			#region ======================================= МЕТОДЫ ====================================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Запись свойства
			/// </summary>
			/// <param name="writer">Писатель Json</param>
			/// <param name="value">Значение свойства</param>
			/// <param name="serializer">Сериализатор Json</param>
			//---------------------------------------------------------------------------------------------------------
			public override void WriteJson(JsonWriter writer, TColor value, JsonSerializer serializer)
			{
				writer.WriteValue(value.SerializeToString());
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Чтение свойства
			/// </summary>
			/// <param name="reader">Читатель Json</param>
			/// <param name="objectType">Тип объекта</param>
			/// <param name="existingValue">Статус существования значение</param>
			/// <param name="hasExistingValue">Статус существования значение</param>
			/// <param name="serializer">Сериализатор Json</param>
			/// <returns>Значение свойства</returns>
			//---------------------------------------------------------------------------------------------------------
			public override TColor ReadJson(JsonReader reader, Type objectType, TColor existingValue,
				Boolean hasExistingValue, JsonSerializer serializer)
			{
				return TColor.DeserializeFromString((String)reader.Value);
			}
			#endregion
		}
	}
}
//=====================================================================================================================