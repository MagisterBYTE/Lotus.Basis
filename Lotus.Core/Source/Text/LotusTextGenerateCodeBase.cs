//=====================================================================================================================
// Проект: Модуль базового ядра
// Раздел: Подсистема текстовых данных
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusTextGenerateCodeBase.cs
*		Определение базового класса генератора для генерации/редактирования программного кода.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
//=====================================================================================================================
namespace Lotus
{
	namespace Core
	{
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup CoreText
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Базовый класс генератора для генерации/редактирования программного кода
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public abstract class CTextGenerateCodeBase : CTextList
		{
			#region ======================================= ДАННЫЕ ====================================================
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="capacity">Начальная максимальная емкость списка</param>
			//---------------------------------------------------------------------------------------------------------
			protected CTextGenerateCodeBase(Int32 capacity = 24)
				: base(capacity)
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="str">Строка</param>
			//---------------------------------------------------------------------------------------------------------
			protected CTextGenerateCodeBase(String str)
				: base(str)
			{
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление разделителя для части
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddDelimetrPart()
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление разделителя для секции
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddDelimetrSection()
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление открытия блока
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddOpenBlock()
			{
				Add("}");
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление закрытия блока
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddCloseBlock()
			{
				Add("}");
			}
			#endregion

			#region ======================================= РАБОТА С ПРОСТРАНСТВАМИ ИМЕН  =============================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление используемых пространств имён
			/// </summary>
			/// <param name="namespaces">Список пространства имён</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddNamespaceUsing(params String[] namespaces)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление открытие пространства имени
			/// </summary>
			/// <param name="spaceName">Имя пространства имён</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddNamespaceOpen(String spaceName)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление закрытия пространства имени
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddNamespaceClose()
			{

			}
			#endregion

			#region ======================================= ОПИСАНИЯ ФАЙЛА ============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление стандартного заголовка для файлов кода проекта Lotus
			/// </summary>
			/// <param name="moduleName"></param>
			/// <param name="subsystemName"></param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddFileHeader(String moduleName, String subsystemName)
			{
				AddDelimetrPart();
				Add("// Проект: LotusPlatform");
				Add("// Раздел: " + moduleName);
				Add("// Подраздел: " + subsystemName);
				Add("// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>");
				AddDelimetrSection();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление имени файла и краткое описание
			/// </summary>
			/// <param name="fileName">Имя файла</param>
			/// <param name="briefDesc">Краткое описание</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddFileBriefDesc(String fileName, String briefDesc)
			{
				Add("/** \\file " + fileName);
				Add("*\t\t" + briefDesc);
				Add("*/");
				AddDelimetrSection();
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление версии и даты изменения файла
			/// </summary>
			/// <param name="version">Версия файла</param>
			/// <param name="date">Дата файла</param>
			//---------------------------------------------------------------------------------------------------------
			public void AddFileVersion(String version = "1.0.0.0", String date = "04.04.2020")
			{
				Add("// Версия: " + version);
				Add("// Последнее изменение от " + date);
				AddDelimetrPart();
			}
			#endregion

			#region ======================================= ДЕКЛАРАЦИЯ ТИПОВ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление декларации статического публичного класса
			/// </summary>
			/// <param name="className">Имя класса</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddClassStaticPublic(String className)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление окончание декларации класса
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddClassEndDeclaration()
			{

			}
			#endregion

			#region ======================================= ДЕКЛАРАЦИЯ ПОЛЕЙ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление декларации константного публичного поля
			/// </summary>
			/// <param name="typeName">Имя типа</param>
			/// <param name="fieldName">Имя поля</param>
			/// <param name="value">Значения поля</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddFieldConstPublic(String typeName, String fieldName, String value)
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление декларации константного публичного поля типа String
			/// </summary>
			/// <param name="fieldName">Имя поля</param>
			/// <param name="value">Значения поля</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddFieldConstPublicString(String fieldName, String value)
			{
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление декларации статического поля только для чтения
			/// </summary>
			/// <param name="typeName">Имя типа</param>
			/// <param name="fieldName">Имя поля</param>
			/// <param name="value">Значения поля</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddFieldStaticReadonlyPublic(String typeName, String fieldName, String value)
			{

			}
			#endregion

			#region ======================================= ДЕКЛАРАЦИЯ СВОЙСТВ ========================================
			#endregion

			#region ======================================= ДЕКЛАРАЦИЯ МЕТОДОВ ========================================
			#endregion

			#region ======================================= ДЕКЛАРАЦИЯ КОММЕНТАРИЕВ ===================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление комментария
			/// </summary>
			/// <param name="text">Текст комментария</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddComment(String text)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление комментария для секции или раздела
			/// </summary>
			/// <param name="text">Текст комментария</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddCommentSection(String text)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление стандартного краткого комментария
			/// </summary>
			/// <param name="delimetrSectionBefore">Статус добавления разделителя секции перед комментарием</param>
			/// <param name="text">Текст комментария</param>
			/// <param name="delimetrSectionAfter">Статус добавления разделителя секции после комментария </param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddCommentSummary(Boolean delimetrSectionBefore, String text, Boolean delimetrSectionAfter)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление стандартного краткого комментария для полей и свойств
			/// </summary>
			/// <param name="text">Текст комментария</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddCommentSummaryForData(String text)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление стандартного расширенного комментария для полей и свойств
			/// </summary>
			/// <param name="text">Текст комментария</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddCommentRemarksForData(String text)
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление команды Doxygen - добавить в группу
			/// </summary>
			/// <param name="groupName">Имя группы</param>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddDoxygenAddToGroup(String groupName)
			{
				AddDelimetrSection();
				Add("//! \\addtogroup " + groupName);
				Add("*@{*/");
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Добавление команды Doxygen - окончание группы
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public virtual void AddDoxygenEndGroup()
			{
				AddDelimetrSection();
				Add("/**@}*/");
				AddDelimetrSection();
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================