//=====================================================================================================================
// Проект: Модуль трехмерного объекта
// Раздел: Общая подсистема
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusObject3DEntity.cs
*		Базовая сущность в подсистеме 3D объекта для формирование иерархической структуры трехмерной сцены.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.ComponentModel;
//---------------------------------------------------------------------------------------------------------------------
#if USE_WINDOWS
using System.Windows;
using System.Windows.Media;
using Media3D = System.Windows.Media.Media3D;
#endif
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//---------------------------------------------------------------------------------------------------------------------
#nullable disable
//=====================================================================================================================
namespace Lotus
{
	namespace Object3D
	{
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup Object3DBase
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Базовая сущность в подсистеме 3D объекта для формирование иерархической структуры трехмерной сцены
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CEntity3D : CNameableInt, ILotusViewModelOwner, ILotusViewModelBuilder
		{
			#region ======================================= ДАННЫЕ ====================================================
			protected internal ILotusViewModel _ownerViewModel;
			#endregion

			#region ======================================= СВОЙСТВА ILotusViewModelOwner =============================
			/// <summary>
			/// ViewModel
			/// </summary>
			public ILotusViewModel OwnerViewModel
			{
				get { return _ownerViewModel; }
				set
				{
					_ownerViewModel = value;
				}
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CEntity3D()
			{

			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует данные узла указанными значениями
			/// </summary>
			/// <param name="name">Название узла</param>
			/// <param name="id">Идентификатор узла</param>
			//---------------------------------------------------------------------------------------------------------
			public CEntity3D(String name, Int32 id)
			{
				_name = name;
				_id = id;
			}
			#endregion

			#region ======================================= СИСТЕМНЫЕ МЕТОДЫ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Преобразование к текстовому представлению
			/// </summary>
			/// <returns>Текстовое представление узла</returns>
			//---------------------------------------------------------------------------------------------------------
			public override String ToString()
			{
				return _name;
			}
			#endregion

			#region ======================================= МЕТОДЫ ILotusViewModelBuilder ==============================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение количества дочерних узлов
			/// </summary>
			/// <returns>Количество дочерних узлов</returns>
			//---------------------------------------------------------------------------------------------------------
			public virtual Int32 GetCountChildrenNode()
			{
				return 0;
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение дочернего узла по индексу
			/// </summary>
			/// <param name="index">Индекс дочернего узла</param>
			/// <returns>Дочерней узел</returns>
			//---------------------------------------------------------------------------------------------------------
			public virtual System.Object GetChildrenNode(Int32 index)
			{
				return null;
			}
			#endregion
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================