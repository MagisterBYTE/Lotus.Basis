//=====================================================================================================================
// Проект: Модуль репозитория
// Раздел: Подсистема постраничного разделения
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusRepositoryPageInfo.cs
*		Определение типов постраничного запроса/получения данных.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using System;
using System.Collections.Generic;
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace Repository
	{
		//-------------------------------------------------------------------------------------------------------------
		/**
         * \defgroup RepositoryPageInfo Подсистема постраничного разделения
         * \ingroup Repository
         * \brief Подсистема постраничного разделения определяет однотипный унифицированный набор типов для 
			постраничного разделения данных и формирования соответствующих запросов.
         * @{
         */
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейса для постраничного запроса данных
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusPageInfoRequest
		{
			/// <summary>
			/// Номер старницы, отсчет от нуля
			/// </summary>
			Int32 PageNumber { get; set; }

			/// <summary>
			/// Размер страницы
			/// </summary>
			Int32 PageSize { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Класс для постраничного запроса данных
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CPageInfoRequest : ILotusPageInfoRequest
		{
			/// <summary>
			/// Номер старницы, отсчет от нуля
			/// </summary>
			public Int32 PageNumber { get; set; }

			/// <summary>
			/// Размер страницы
			/// </summary>
			public Int32 PageSize { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейс для постраничного получения данных
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusPageInfoResponse
		{
			/// <summary>
			/// Номер старницы, отсчет от нуля
			/// </summary>
			Int32 PageNumber { get; set; }

			/// <summary>
			/// Размер страницы
			/// </summary>
			Int32 PageSize { get; set; }

			/// <summary>
			/// Количество данных на текущей странице
			/// </summary>
			Int32 CurrentPageSize { get; set; }

			/// <summary>
			/// Общие количество данных по данному запросу
			/// </summary>
			Int32 TotalCount { get; set; }
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Класс для постраничного получения данных
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CPageInfoResponse : ILotusPageInfoResponse
		{
			/// <summary>
			/// Номер старницы, отсчет от нуля
			/// </summary>
			public Int32 PageNumber { get; set; }

			/// <summary>
			/// Размер страницы
			/// </summary>
			public Int32 PageSize { get; set; }

			/// <summary>
			/// Количество данных на текущей странице
			/// </summary>
			public Int32 CurrentPageSize { get; set; }

			/// <summary>
			/// Общие количество данных по данному запросу
			/// </summary>
			public Int32 TotalCount { get; set; }
		}
		//-------------------------------------------------------------------------------------------------------------
		/**@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================